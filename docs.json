[
  {
    "Constant" : [
      {
        "doc" : "Key used for persisting space names between Hammerspoon launches via hs.settings.",
        "stripped_doc" : [
          "Key used for persisting space names between Hammerspoon launches via hs.settings."
        ],
        "def" : "Spacer.settingsKey",
        "desc" : "Key used for persisting space names between Hammerspoon launches via hs.settings.",
        "notes" : [

        ],
        "signature" : "Spacer.settingsKey",
        "type" : "Constant",
        "returns" : [

        ],
        "name" : "settingsKey",
        "parameters" : [

        ]
      }
    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log \nlevel for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log ",
          "level for the messages coming from the Spoon."
        ],
        "def" : "Spacer.logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log",
        "notes" : [

        ],
        "signature" : "Spacer.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "parameters" : [

        ]
      },
      {
        "doc" : "hs.menubar representing the menu bar for Spacer.",
        "stripped_doc" : [
          "hs.menubar representing the menu bar for Spacer."
        ],
        "def" : "Spacer.menuBar",
        "desc" : "hs.menubar representing the menu bar for Spacer.",
        "notes" : [

        ],
        "signature" : "Spacer.menuBar",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "menuBar",
        "parameters" : [

        ]
      },
      {
        "doc" : "hs.spaces.watcher instance used for monitoring for space changes.",
        "stripped_doc" : [
          "hs.spaces.watcher instance used for monitoring for space changes."
        ],
        "def" : "Spacer.spaceWatcher",
        "desc" : "hs.spaces.watcher instance used for monitoring for space changes.",
        "notes" : [

        ],
        "signature" : "Spacer.spaceWatcher",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "spaceWatcher",
        "parameters" : [

        ]
      },
      {
        "doc" : "Table with key-value mapping of Space ID to it's user set name.",
        "stripped_doc" : [
          "Table with key-value mapping of Space ID to it's user set name."
        ],
        "def" : "Spacer.spaceNames",
        "desc" : "Table with key-value mapping of Space ID to it's user set name.",
        "notes" : [

        ],
        "signature" : "Spacer.spaceNames",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "spaceNames",
        "parameters" : [

        ]
      },
      {
        "doc" : "Table holding an ordered list of space IDs, which is then used to resolve\nactual space names for IDs from Spacer.spaceNames.",
        "stripped_doc" : [
          "Table holding an ordered list of space IDs, which is then used to resolve",
          "actual space names for IDs from Spacer.spaceNames."
        ],
        "def" : "Spacer.orderedSpaces",
        "desc" : "Table holding an ordered list of space IDs, which is then used to resolve",
        "notes" : [

        ],
        "signature" : "Spacer.orderedSpaces",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "orderedSpaces",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "Deprecated" : [

    ],
    "type" : "Module",
    "desc" : "Name and switch Mission Control spaces in the menu bar",
    "Constructor" : [

    ],
    "doc" : "Name and switch Mission Control spaces in the menu bar\n\nDownload: https:\/\/github.com\/adammillerio\/Spoons\/raw\/main\/Spoons\/Spacer.spoon.zip\n\nExample Usage (Using [SpoonInstall](https:\/\/zzamboni.org\/post\/using-spoons-in-hammerspoon\/)):\nspoon.SpoonInstall:andUse(\n  \"Spacer\",\n  {\n    start = true\n  }\n)\n\nSpace names can be changed from the menubar by holding Alt while selecting\nthe desired space to rename. These are persisted between launches via the\nhs.settings module.",
    "Method" : [
      {
        "doc" : "Spoon initializer method for Spacer.",
        "stripped_doc" : [
          "Spoon initializer method for Spacer."
        ],
        "def" : "Spacer:init()",
        "desc" : "Spoon initializer method for Spacer.",
        "notes" : [

        ],
        "signature" : "Spacer:init()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "init",
        "parameters" : [

        ]
      },
      {
        "doc" : "Spoon start method for Spacer. Creates\/starts menu bar item and space watcher.",
        "stripped_doc" : [
          "Spoon start method for Spacer. Creates\/starts menu bar item and space watcher."
        ],
        "def" : "Spacer:start()",
        "desc" : "Spoon start method for Spacer. Creates\/starts menu bar item and space watcher.",
        "notes" : [

        ],
        "signature" : "Spacer:start()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "start",
        "parameters" : [

        ]
      },
      {
        "doc" : "Spoon stop method for Spacer. Deletes menu bar item and stops space watcher.",
        "stripped_doc" : [
          "Spoon stop method for Spacer. Deletes menu bar item and stops space watcher."
        ],
        "def" : "Spacer:stop()",
        "desc" : "Spoon stop method for Spacer. Deletes menu bar item and stops space watcher.",
        "notes" : [

        ],
        "signature" : "Spacer:stop()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "stop",
        "parameters" : [

        ]
      }
    ],
    "Command" : [

    ],
    "items" : [
      {
        "doc" : "Key used for persisting space names between Hammerspoon launches via hs.settings.",
        "stripped_doc" : [
          "Key used for persisting space names between Hammerspoon launches via hs.settings."
        ],
        "def" : "Spacer.settingsKey",
        "desc" : "Key used for persisting space names between Hammerspoon launches via hs.settings.",
        "notes" : [

        ],
        "signature" : "Spacer.settingsKey",
        "type" : "Constant",
        "returns" : [

        ],
        "name" : "settingsKey",
        "parameters" : [

        ]
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log \nlevel for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log ",
          "level for the messages coming from the Spoon."
        ],
        "def" : "Spacer.logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log",
        "notes" : [

        ],
        "signature" : "Spacer.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "parameters" : [

        ]
      },
      {
        "doc" : "hs.menubar representing the menu bar for Spacer.",
        "stripped_doc" : [
          "hs.menubar representing the menu bar for Spacer."
        ],
        "def" : "Spacer.menuBar",
        "desc" : "hs.menubar representing the menu bar for Spacer.",
        "notes" : [

        ],
        "signature" : "Spacer.menuBar",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "menuBar",
        "parameters" : [

        ]
      },
      {
        "doc" : "Table holding an ordered list of space IDs, which is then used to resolve\nactual space names for IDs from Spacer.spaceNames.",
        "stripped_doc" : [
          "Table holding an ordered list of space IDs, which is then used to resolve",
          "actual space names for IDs from Spacer.spaceNames."
        ],
        "def" : "Spacer.orderedSpaces",
        "desc" : "Table holding an ordered list of space IDs, which is then used to resolve",
        "notes" : [

        ],
        "signature" : "Spacer.orderedSpaces",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "orderedSpaces",
        "parameters" : [

        ]
      },
      {
        "doc" : "Table with key-value mapping of Space ID to it's user set name.",
        "stripped_doc" : [
          "Table with key-value mapping of Space ID to it's user set name."
        ],
        "def" : "Spacer.spaceNames",
        "desc" : "Table with key-value mapping of Space ID to it's user set name.",
        "notes" : [

        ],
        "signature" : "Spacer.spaceNames",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "spaceNames",
        "parameters" : [

        ]
      },
      {
        "doc" : "hs.spaces.watcher instance used for monitoring for space changes.",
        "stripped_doc" : [
          "hs.spaces.watcher instance used for monitoring for space changes."
        ],
        "def" : "Spacer.spaceWatcher",
        "desc" : "hs.spaces.watcher instance used for monitoring for space changes.",
        "notes" : [

        ],
        "signature" : "Spacer.spaceWatcher",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "spaceWatcher",
        "parameters" : [

        ]
      },
      {
        "doc" : "Spoon initializer method for Spacer.",
        "stripped_doc" : [
          "Spoon initializer method for Spacer."
        ],
        "def" : "Spacer:init()",
        "desc" : "Spoon initializer method for Spacer.",
        "notes" : [

        ],
        "signature" : "Spacer:init()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "init",
        "parameters" : [

        ]
      },
      {
        "doc" : "Spoon start method for Spacer. Creates\/starts menu bar item and space watcher.",
        "stripped_doc" : [
          "Spoon start method for Spacer. Creates\/starts menu bar item and space watcher."
        ],
        "def" : "Spacer:start()",
        "desc" : "Spoon start method for Spacer. Creates\/starts menu bar item and space watcher.",
        "notes" : [

        ],
        "signature" : "Spacer:start()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "start",
        "parameters" : [

        ]
      },
      {
        "doc" : "Spoon stop method for Spacer. Deletes menu bar item and stops space watcher.",
        "stripped_doc" : [
          "Spoon stop method for Spacer. Deletes menu bar item and stops space watcher."
        ],
        "def" : "Spacer:stop()",
        "desc" : "Spoon stop method for Spacer. Deletes menu bar item and stops space watcher.",
        "notes" : [

        ],
        "signature" : "Spacer:stop()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "stop",
        "parameters" : [

        ]
      }
    ],
    "Field" : [

    ],
    "name" : "Spacer"
  }
]
